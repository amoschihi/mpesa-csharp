{
  "api/Safaricom.Mpesa.Responses.html": {
    "href": "api/Safaricom.Mpesa.Responses.html",
    "title": "Namespace Safaricom.Mpesa.Responses | M-Pesa.Net",
    "keywords": "Namespace Safaricom.Mpesa.Responses Classes AccountBalanceResponse Account balance response. AuthResponse B2BResponse B2B Response. B2CResponse B2C Response. C2BRegisterResponse C2BRegister response. C2BSimulateResponse C2BSimulate response. GenericResponse Generic response. Base class for common responses from Daraja LNMPaymentResponse Lipa na mpesa online response. LNMQueryResponse LNMQuery response. ReversalResponse Reversal response. TransactionStatusResponse Transaction status response."
  },
  "api/Safaricom.Mpesa.Responses.LNMPaymentResponse.html": {
    "href": "api/Safaricom.Mpesa.Responses.LNMPaymentResponse.html",
    "title": "Class LNMPaymentResponse | M-Pesa.Net",
    "keywords": "Class LNMPaymentResponse Lipa na mpesa online response. Inheritance System.Object GenericResponse LNMPaymentResponse Inherited Members GenericResponse.ConversationId GenericResponse.OriginatorCoversationId GenericResponse.ResponseDescription System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : System.Dynamic.ExpandoObject Assembly : cs.temp.dll.dll Syntax public class LNMPaymentResponse : GenericResponse Properties CheckoutRequestID Gets or sets the checkout request identifier. Declaration public string CheckoutRequestID { get; set; } Property Value System.String The checkout request identifier. CustomerMessage Gets or sets the customer message. Declaration public string CustomerMessage { get; set; } Property Value System.String The customer message. MerchantRequestID Gets or sets the merchant request identifier. Declaration public string MerchantRequestID { get; set; } Property Value System.String The merchant request identifier. ResponseCode Gets or sets the response code. Declaration public int ResponseCode { get; set; } Property Value System.Int32 The response code."
  },
  "api/Safaricom.Mpesa.Api.ExtraConfig.html": {
    "href": "api/Safaricom.Mpesa.Api.ExtraConfig.html",
    "title": "Class Api.ExtraConfig | M-Pesa.Net",
    "keywords": "Class Api.ExtraConfig Used to set extra config needed for advanced calls such as LNM Inheritance System.Object Api.ExtraConfig Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : System.Dynamic.ExpandoObject Assembly : cs.temp.dll.dll Syntax public class ExtraConfig Properties CertPath Gets or sets the cert path. Declaration public string CertPath { get; set; } Property Value System.String Path to Mpesa Public Key Initiator Gets or sets the initiator. Declaration public string Initiator { get; set; } Property Value System.String The initiator. LNMPassWord Gets or sets the LNM Password. Declaration public string LNMPassWord { get; set; } Property Value System.String The LNMPassword. LNMShortCode Gets or sets the LNM Short code. Declaration public int LNMShortCode { get; set; } Property Value System.Int32 The LNM Shortcode. SecurityCredential Gets or sets the security credential. Declaration public string SecurityCredential { get; set; } Property Value System.String The security credential. ShortCode Gets or sets the short code. Declaration public int ShortCode { get; set; } Property Value System.Int32 The short code."
  },
  "api/Safaricom.Mpesa.Responses.C2BSimulateResponse.html": {
    "href": "api/Safaricom.Mpesa.Responses.C2BSimulateResponse.html",
    "title": "Class C2BSimulateResponse | M-Pesa.Net",
    "keywords": "Class C2BSimulateResponse C2BSimulate response. Inheritance System.Object GenericResponse C2BSimulateResponse Inherited Members GenericResponse.ConversationId GenericResponse.OriginatorCoversationId GenericResponse.ResponseDescription System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : System.Dynamic.ExpandoObject Assembly : cs.temp.dll.dll Syntax public class C2BSimulateResponse : GenericResponse"
  },
  "api/Safaricom.Mpesa.Responses.B2BResponse.html": {
    "href": "api/Safaricom.Mpesa.Responses.B2BResponse.html",
    "title": "Class B2BResponse | M-Pesa.Net",
    "keywords": "Class B2BResponse B2B Response. Inheritance System.Object GenericResponse B2BResponse Inherited Members GenericResponse.ConversationId GenericResponse.OriginatorCoversationId GenericResponse.ResponseDescription System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : System.Dynamic.ExpandoObject Assembly : cs.temp.dll.dll Syntax public class B2BResponse : GenericResponse Properties ResponseCode Gets or sets the response code. Declaration public int ResponseCode { get; set; } Property Value System.Int32 The response code."
  },
  "api/Safaricom.Mpesa.html": {
    "href": "api/Safaricom.Mpesa.html",
    "title": "Namespace Safaricom.Mpesa | M-Pesa.Net",
    "keywords": "Namespace Safaricom.Mpesa Classes Api Contains the main api calls and extra utils Api.Env Enum type class for available environments Api.ExtraConfig Used to set extra config needed for advanced calls such as LNM"
  },
  "api/Safaricom.Mpesa.Responses.C2BRegisterResponse.html": {
    "href": "api/Safaricom.Mpesa.Responses.C2BRegisterResponse.html",
    "title": "Class C2BRegisterResponse | M-Pesa.Net",
    "keywords": "Class C2BRegisterResponse C2BRegister response. Inheritance System.Object GenericResponse C2BRegisterResponse Inherited Members GenericResponse.ConversationId GenericResponse.OriginatorCoversationId GenericResponse.ResponseDescription System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : System.Dynamic.ExpandoObject Assembly : cs.temp.dll.dll Syntax public class C2BRegisterResponse : GenericResponse"
  },
  "articles/transact.html": {
    "href": "articles/transact.html",
    "title": "Transactions & Requests | M-Pesa.Net",
    "keywords": "Transactions & Requests This page will be divided into three major segments: LNM Transactions B2B/C Transactions Utilities Before we begin, it is good to appreciate that almost of all Daraja Transactions are asynchronous meaning that you will usually be waiting for callbacks on queURL etc. In the same sprit, apart from OAuth, all other transactions will return an awaitable ( System.Threading.Tasks.Task ) The resolved response will interface RestSharp.IRestResponse<T> where T is determined by the specific transaction. Checkout the different response types we have. Lipa Na Mpesa To use these APIs make sure that LNMShortCode & LNMPassWord are set. LNM Payment This is used trigger an LNM Transaction. Api mpesa = new Api(Env.Sandbox, \"consumerKey\", \"consumerSecret\", configs); var res = await mpesa.LipaNaMpesaOnline(msisdn, 100, callbackURL, \"Some Ref\"); var transactionId = res.Data.CheckoutRequestID; Utilities Account Balance This API request Daraja for a callback with the account balance. Api mpesa = new Api(Env.Sandbox, \"consumerKey\", \"consumerSecret\", configs); var accountyParty = new IdentityParty(configs.ShortCode, IdentityParty.IdentifierType.SHORTCODE); var res = await mpesa.AccountBalance(partyA, \"some URL\", \"some URL\"); var transactionId = res.Data.ConversationID; See Also: AccountBalance API documentation The expected Daraja AccountBalance Callback Response to the resultURL . AccountBalance API Response Authentication Daraja uses OAuth2.0 hence expects a header \"Authorization\", \"Basic \" + encoded\" . Remember Daraja tokens expire after 60min. Don't worry though, this is all taken care in this library. Api mpesa = new Api(Env.Sandbox, \"consumerKey\", \"consumerSecret\", configs); var token = mpesa.Auth().Data.AccessToken or asynchronous Api mpesa = new Api(Env.Sandbox, \"consumerKey\", \"consumerSecret\", configs); var res = await mpesa.AuthAsync(); var token = res.Data.AccessToken See Also: Auth API Documentation Auth Async API Documentation The expected Daraja Callback Response Auth API Response C2B Register In the Terminology page, we have discussed several terms and noted that C2B transactions are triggered by the user. This call is used to register the validation and confirmation URLs and can only be run once in Production Environment , so use it smartly. You can always consult Daraja and request changes, though this may take time. var res = await mpesa.C2BRegister(confirmationURL, validationURL) var transactionId = res.Data.ConversationID; See Also: C2BRegister API Documentation The expected Daraja Responses C2BRegister API Response Reversal Sometimes you just want your money back(We wont judge ;)) and hence the Reversal Api. Api mpesa = new Api(Env.Sandbox, \"consumerKey\", \"consumerSecret\", configs); var res = await mpesa.ReversalRequest(\"LKXXXX1234\", 100, queueUrl, resultUrl ); var transactionId = res.Data.ConversationID; See Also: Reversal API Documentation The expected Daraja Responses Reversal API Response Transction Status The Transaction Status API is a very powerful API that can be important when you did not get the callback. Api mpesa = new Api(Env.Sandbox, \"consumerKey\", \"consumerSecret\", configs); var res = await mpesa.TransactionStatus(\"MKXXXX1234\", queueUrl, resultUrl ); var transactionId = res.Data.ConversationID; See Also: TransactionStatus API Documentation The expected Daraja Responses TransactionStatus API Response"
  },
  "articles/getting-started.html": {
    "href": "articles/getting-started.html",
    "title": "Quick Start | M-Pesa.Net",
    "keywords": "Quick Start Some few notes This library is built to make your work easier. We are aware that a lot of times in Daraja you have to keep sending arguments like shortCode, identifier type. In this library these are defaulted when possible hence you will definitely only pass what is needed. Feel free to submit a PR to improve this. Creating an instance var mpesaAPI = new Api(Api.Env.SANDBOX, \"consumerKey\", \"consumerSecret\", Extra config = null); From the example above we can note that we basically need: Env is the environment which transactions will executed ie Sandbox | Production ConsumerKey and ConsumerSecret provided from Daraja. See Authentication Extra Config includes configs used for LNM & security credential transactions. It is RECOMMENDED though optional (most transactions will need some of those configs). Below is an example: ExtraConfig configs = new ExtraConfig { ShortCode = 6000000, Initiator = \"testapikkk\", LNMShortCode = 123456, LNMPassWord = \"pa55WOrd\", SecurityCredential = \"ddsds\", CertPath = \"~/c-sharp-mpesa-lib/Mpesa/cert.cer\" }; Getting your credentials Creds for Sandbox should be available on Daraja. For Production, you will need to fill in the go to production form. See image below: For going live, click here Multiple Paybills & Environments Thats Simple! var prodAPI = new Api(Api.Env.Production, \"consumerKey1\", \"consumerSecret1\", Extra config = null); var sandboxAPI = new Api(Api.Env.Sandbox, \"consumerKey2\", \"consumerSecret2\", Extra config = null); Each instance is exclusive of the other. Now head to Doing Transctions"
  },
  "api/Safaricom.Mpesa.Responses.B2CResponse.html": {
    "href": "api/Safaricom.Mpesa.Responses.B2CResponse.html",
    "title": "Class B2CResponse | M-Pesa.Net",
    "keywords": "Class B2CResponse B2C Response. Inheritance System.Object GenericResponse B2CResponse Inherited Members GenericResponse.ConversationId GenericResponse.OriginatorCoversationId GenericResponse.ResponseDescription System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : System.Dynamic.ExpandoObject Assembly : cs.temp.dll.dll Syntax public class B2CResponse : GenericResponse Properties ResponseCode Gets or sets the response code. Declaration public int ResponseCode { get; set; } Property Value System.Int32 The response code."
  },
  "api/Safaricom.Mpesa.Responses.AccountBalanceResponse.html": {
    "href": "api/Safaricom.Mpesa.Responses.AccountBalanceResponse.html",
    "title": "Class AccountBalanceResponse | M-Pesa.Net",
    "keywords": "Class AccountBalanceResponse Account balance response. Inheritance System.Object GenericResponse AccountBalanceResponse Inherited Members GenericResponse.ConversationId GenericResponse.OriginatorCoversationId GenericResponse.ResponseDescription System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : System.Dynamic.ExpandoObject Assembly : cs.temp.dll.dll Syntax public class AccountBalanceResponse : GenericResponse Properties ResponseCode Gets or sets the response code. Declaration public int ResponseCode { get; set; } Property Value System.Int32 The response code."
  },
  "api/Safaricom.Mpesa.Responses.ReversalResponse.html": {
    "href": "api/Safaricom.Mpesa.Responses.ReversalResponse.html",
    "title": "Class ReversalResponse | M-Pesa.Net",
    "keywords": "Class ReversalResponse Reversal response. Inheritance System.Object GenericResponse ReversalResponse Inherited Members GenericResponse.ConversationId GenericResponse.OriginatorCoversationId GenericResponse.ResponseDescription System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : System.Dynamic.ExpandoObject Assembly : cs.temp.dll.dll Syntax public class ReversalResponse : GenericResponse Properties ResponseCode Gets or sets the response code. Declaration public int ResponseCode { get; set; } Property Value System.Int32 The response code."
  },
  "api/Safaricom.Mpesa.Responses.GenericResponse.html": {
    "href": "api/Safaricom.Mpesa.Responses.GenericResponse.html",
    "title": "Class GenericResponse | M-Pesa.Net",
    "keywords": "Class GenericResponse Generic response. Base class for common responses from Daraja Inheritance System.Object GenericResponse AccountBalanceResponse B2BResponse B2CResponse C2BRegisterResponse C2BSimulateResponse LNMPaymentResponse ReversalResponse Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : System.Dynamic.ExpandoObject Assembly : cs.temp.dll.dll Syntax public abstract class GenericResponse Properties ConversationId Gets or sets the conversation identifier. Declaration public string ConversationId { get; set; } Property Value System.String The conversation identifier. OriginatorCoversationId Gets or sets the originator coversation identifier. Declaration public string OriginatorCoversationId { get; set; } Property Value System.String The originator coversation identifier. ResponseDescription Gets or sets the response description. Declaration public string ResponseDescription { get; set; } Property Value System.String The response description."
  },
  "api/Safaricom.Mpesa.Api.html": {
    "href": "api/Safaricom.Mpesa.Api.html",
    "title": "Class Api | M-Pesa.Net",
    "keywords": "Class Api Contains the main api calls and extra utils Inheritance System.Object Api Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : System.Dynamic.ExpandoObject Assembly : cs.temp.dll.dll Syntax public class Api Constructors Api(Api.Env, String, String, Api.ExtraConfig) Initializes a new instance of the Api class. Declaration public Api(Api.Env env, string consumerKey, string consumerSecret, Api.ExtraConfig config = null) Parameters Api.Env env Env. System.String consumerKey Consumer key. System.String consumerSecret Consumer secret. Api.ExtraConfig config Configuration for LNM, Security credentials etc. Examples Api mpesa = new Api(Env.Sandbox, \"Key\", \"Secret\", null); Methods AccountBalance(IdentityParty, String, String, String) Accounts the balance. Declaration public Task<IRestResponse<AccountBalanceResponse>> AccountBalance(IdentityParty partyA, string queueUrl, string resultUrl, string remarks = \"Checking account balance\") Parameters IdentityParty partyA The account you are checking balance for System.String queueUrl Queue URL. System.String resultUrl Result URL. System.String remarks Remarks. Returns System.Threading.Tasks.Task < IRestResponse < AccountBalanceResponse >> The balance awaitable. Examples Api mpesa = new Api(Env.Sandbox, \"consumerKey\", \"consumerSecret\", configs); var accountyParty = new IdentityParty(configs.ShortCode, IdentityParty.IdentifierType.SHORTCODE); var res = await mpesa.AccountBalance( partyA , queueUrl , resultUrl ); var transactionId = res.Data.ConversationID; Auth() OAuth. Declaration public IRestResponse<AuthResponse> Auth() Returns IRestResponse < AuthResponse > The Creds. Examples Api mpesa = new Api(Env.Sandbox, \"consumerKey\", \"consumerSecret\", configs); var token = mpesa.Auth().Data.AccessToken AuthAsync() Async OAuth. Declaration public Task<IRestResponse<AuthResponse>> AuthAsync() Returns System.Threading.Tasks.Task < IRestResponse < AuthResponse >> The credentials awaitable. Examples Api mpesa = new Api(Env.Sandbox, \"consumerKey\", \"consumerSecret\", configs); var res = await mpesa.AuthAsync(); var token = res.Data.AccessToken B2B(IdentityParty, Int32, String, String, CommandID, String, String) Business to Business Mpesa transaction Declaration public Task<IRestResponse<B2BResponse>> B2B(IdentityParty receiverParty, int amount, string queueUrl, string resultUrl, CommandID commandId = null, string remarks = \"B2B Payment\", string accountRef = null) Parameters IdentityParty receiverParty Receiver party. System.Int32 amount Amount. System.String queueUrl Queue URL. System.String resultUrl Result URL. CommandID commandId Command identifier. System.String remarks Remarks. System.String accountRef Account reference. Returns System.Threading.Tasks.Task < IRestResponse < B2BResponse >> The Status Examples Api mpesa = new Api(Env.Sandbox, \"consumerKey\", \"consumerSecret\", configs); var receiverParty = new IdentityParty(600111, IdentityParty.IdentifierType.SHORTCODE); var res = await mpesa.B2B( receiverParty , amount , queueUrl , resultUrl ); var transactionId = res.Data.ConversationID; B2C(Int64, Int32, String, String, CommandID, String, String) Business to Customer Mpesa Transaction Declaration public Task<IRestResponse<B2CResponse>> B2C(long msisdn, int amount, string queueUrl, string resultUrl, CommandID commandId = null, string remarks = \"B2C Payment\", string occasion = \"None\") Parameters System.Int64 msisdn Msisdn. System.Int32 amount Amount. System.String queueUrl Queue URL. System.String resultUrl Result URL. CommandID commandId Command identifier. System.String remarks Remarks. System.String occasion Occasion. Returns System.Threading.Tasks.Task < IRestResponse < B2CResponse >> The transaction status Examples Api mpesa = new Api(Env.Sandbox, \"consumerKey\", \"consumerSecret\", configs); var res = await mpesa.B2C(msisdn, 100, queueURL, resultURL); var transactionId = res.Data.ConversationID; C2BRegister(String, String) C2B Register URL. Declaration public Task<IRestResponse<C2BRegisterResponse>> C2BRegister(string confirmationURL, string validationURL) Parameters System.String confirmationURL The Confirmation URL. System.String validationURL The Validation URL Returns System.Threading.Tasks.Task < IRestResponse < C2BRegisterResponse >> The acknowledgement. Examples Api mpesa = new Api(Env.Sandbox, \"consumerKey\", \"consumerSecret\", configs); var res = await mpesa.C2BRegister( confirmationURL , validationURL ) var transactionId = res.Data.ConversationID; C2BSimulate(Int64, Int32, String, CommandID) Customer to Business Transaction Simulation Declaration public Task<IRestResponse<C2BSimulateResponse>> C2BSimulate(long msisdn, int amount, string billRefNumber, CommandID commandId = null) Parameters System.Int64 msisdn Msisdn. System.Int32 amount Amount. System.String billRefNumber Bill reference number. CommandID commandId Command identifier. Returns System.Threading.Tasks.Task < IRestResponse < C2BSimulateResponse >> The status. Remarks Since Mpesa transactions may be triggered from the users STK menu, this is used in Sandbox to simulate that transaction Examples Api mpesa = new Api(Env.Sandbox, \"consumerKey\", \"consumerSecret\", configs); var res = await mpesa.C2BSimulate(msisdn, 100, \"Sample Ref\"); var transactionId = res.Data.ConversationID; GetSecurityCredential() Gets the security credential. Declaration protected string GetSecurityCredential() Returns System.String The security credential. LipaNaMpesaOnline(Int64, Int32, String, String, String) Lipa na mpesa online. Declaration public Task<IRestResponse<LNMPaymentResponse>> LipaNaMpesaOnline(long senderMsisdn, int amount, string callbackUrl, string accountRef, string transactionDesc = \"Lipa na mpesa online\") Parameters System.Int64 senderMsisdn Sender msisdn. System.Int32 amount Amount. System.String callbackUrl Callback URL. System.String accountRef Account reference. System.String transactionDesc Transaction desc. Returns System.Threading.Tasks.Task < IRestResponse < LNMPaymentResponse >> The Transaction Status. Examples Api mpesa = new Api(Env.Sandbox, \"consumerKey\", \"consumerSecret\", configs); var res = await mpesa.LipaNaMpesaOnline(msisdn, 100, callbackURL, \"Some Ref\"); var transactionId = res.Data.CheckoutRequestID; LipaNaMpesaQuery(String) Lipa na mpesa query. Declaration public Task<IRestResponse<LNMQueryResponse>> LipaNaMpesaQuery(string checkoutRequestId) Parameters System.String checkoutRequestId Checkout request identifier. Returns System.Threading.Tasks.Task < IRestResponse < LNMQueryResponse >> The transaction rtesult Examples Api mpesa = new Api(Env.Sandbox, \"consumerKey\", \"consumerSecret\", configs); var res = await mpesa.LipaNaMpesaQuery(checkoutId); var transactionId = res.Data.ConversationID; ReversalRequest(String, Int32, String, String, String, String) Reverses a request. Declaration public Task<IRestResponse<ReversalResponse>> ReversalRequest(string transactionId, int amount, string queueUrl, string resultUrl, string remarks = \"Reversal\", string occasion = \"Reversal\") Parameters System.String transactionId Transaction identifier. System.Int32 amount Amount. System.String queueUrl Queue URL. System.String resultUrl Result URL. System.String remarks Remarks. System.String occasion Occasion. Returns System.Threading.Tasks.Task < IRestResponse < ReversalResponse >> The request status. Examples Api mpesa = new Api(Env.Sandbox, \"consumerKey\", \"consumerSecret\", configs); var res = await mpesa.ReversalRequest(\"LKXXXX1234\", 100, queueUrl, resultUrl ); var transactionId = res.Data.ConversationID; TransactionStatus(String, String, String, String, String) Gets a transaction status. Declaration public Task<IRestResponse<TransactionStatusResponse>> TransactionStatus(string transactionId, string queueUrl, string resultUrl, string remarks = \"TransactionReversal\", string occasion = \"TransactionReversal\") Parameters System.String transactionId Transaction identifier. System.String queueUrl Queue URL. System.String resultUrl Result URL. System.String remarks Remarks. System.String occasion Occasion. Returns System.Threading.Tasks.Task < IRestResponse < TransactionStatusResponse >> The status Examples Api mpesa = new Api(Env.Sandbox, \"consumerKey\", \"consumerSecret\", configs); var res = await mpesa.TransactionStatus(\"LKXXXX1234\", queueUrl, resultUrl ); var transactionId = res.Data.ConversationID;"
  },
  "articles/install.html": {
    "href": "articles/install.html",
    "title": "Installation | M-Pesa.Net",
    "keywords": "Installation This assumes you have dotnet installed We recommend using Nuget. Current version: $ dotnet add package Mpesa.Net --version {current version} That should be it ! Lets get writing code Development This section is for those who want to hack this library. Ideally you should be ok. To get started with development, just clone this repo: $ git clone https://github.com/geofmureithi/Mpesa.Net $ cd Mpesa.Net $ dotnet test //Run Tests For Documentation generation you will need DocFX Contributing Fork it ( https://github.com/geofmureithi/Mpesa.Net/fork ) Create your feature branch ( git checkout -b feature/fooBar ) Commit your changes ( git commit -am 'Add some fooBar' ) Push to the branch ( git push origin feature/fooBar ) Create a new Pull Request Now head to Getting Started"
  },
  "index.html": {
    "href": "index.html",
    "title": "Mpesa.Net 💸 | M-Pesa.Net",
    "keywords": "Mpesa.Net 💸 An Mpesa Library for .Net Introduction to M-Pesa M-Pesa is one of the most popular mobile money platform praised by the even the likes of Bill Gates. M-Pesa runs on STK so it should ideally run on any phone. Safaricom released a Rest API called Daraja Before getting started with this lib please create an app on Daraja Sandbox Preface All Daraja APIs are included in this library and are well documented and even these docs are generated from code comments Unit tests are included This library does not include a callback server. You will have to write your own. Checkout this repo (Express.js) to see how to receive callbacks. This documentation is written by unix users. This should not be a problem for Windows users, all commands should still run. Licence Licenced under Apache2.0 Lets get Transacting! Now head to Installation"
  },
  "articles/terminology.html": {
    "href": "articles/terminology.html",
    "title": "Mpesa Terminology | M-Pesa.Net",
    "keywords": "Mpesa Terminology Since a lot of developers are working on M-Pesa outside Kenya, we thought it would be good to describe some terminology for those interested! M-Pesa : The mobile money platform Paybill : A unique 6-digit code used for bill payment eg electricity. Usually has a transaction fee. Till Number : A unique 6-digit code used for purchasing goods or services. Usually has no transaction fee. STK : SIM Tool Kit. (That menu that comes with a SIM card) Daraja : Means Bridge, Usually used to refer to the developer site LNM : Means Lipa na M-Pesa meaning Pay with Mpesa. These transactions are always triggered programatically. B2B : denotes transactions between two business/shortcodes. C2B : denotes transactions started by user. C2BSimulate : Since C2B transactions are always started by the user. This denotes the mocking of user triggering the transaction. Feel free to improve this on Github! Go back Home or Getting Started"
  },
  "api/Safaricom.Mpesa.Helpers.html": {
    "href": "api/Safaricom.Mpesa.Helpers.html",
    "title": "Namespace Safaricom.Mpesa.Helpers | M-Pesa.Net",
    "keywords": "Namespace Safaricom.Mpesa.Helpers Classes CommandID IdentityParty Enums IdentityParty.IdentifierType Identifier types as provided by Daraja"
  },
  "api/Safaricom.Mpesa.Helpers.IdentityParty.html": {
    "href": "api/Safaricom.Mpesa.Helpers.IdentityParty.html",
    "title": "Class IdentityParty | M-Pesa.Net",
    "keywords": "Class IdentityParty Inheritance System.Object IdentityParty Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : System.Dynamic.ExpandoObject Assembly : cs.temp.dll.dll Syntax public class IdentityParty Constructors IdentityParty(Int32, IdentityParty.IdentifierType) Initializes a new instance of the IdentityParty class. Declaration public IdentityParty(int party, IdentityParty.IdentifierType type) Parameters System.Int32 party Party. IdentityParty.IdentifierType type Type. Properties Party The actual party msisdn, till or shortcode. Declaration public int Party { get; } Property Value System.Int32 Type The type. Declaration public IdentityParty.IdentifierType Type { get; } Property Value IdentityParty.IdentifierType"
  },
  "api/Safaricom.Mpesa.Helpers.CommandID.html": {
    "href": "api/Safaricom.Mpesa.Helpers.CommandID.html",
    "title": "Class CommandID | M-Pesa.Net",
    "keywords": "Class CommandID Inheritance System.Object CommandID Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : System.Dynamic.ExpandoObject Assembly : cs.temp.dll.dll Syntax public class CommandID Constructors CommandID(String, String) Initializes a new instance of the CommandID class. Declaration public CommandID(string command, string description) Parameters System.String command Command. System.String description Description. Properties AccountBalance Used to check the balance in a paybill/buy goods account (includes utility, MMF, Merchant, Charges paid account) Declaration public static CommandID AccountBalance { get; } Property Value CommandID Account Balance Command BusinessBuyGoods Sending funds from buy goods to another buy goods Declaration public static CommandID BusinessBuyGoods { get; } Property Value CommandID Business BuyGoods Command BusinessPayBill Gets the business pay bill. Declaration public static CommandID BusinessPayBill { get; } Property Value CommandID Sending funds from one paybill to another paybill. BusinessPayment Used to send money from business to customer e.g. refunds Declaration public static CommandID BusinessPayment { get; } Property Value CommandID Business Payment Command BusinessToBusinessTransfer Transferring funds from one paybills MMF to another paybills MMF account Declaration public static CommandID BusinessToBusinessTransfer { get; } Property Value CommandID Business To Business Transfer Command BusinessTransferFromMMFToUtility Transferring funds from paybills MMF to another paybills utility account Declaration public static CommandID BusinessTransferFromMMFToUtility { get; } Property Value CommandID Business Transfer From MMF To Utility CheckIdentity Similar to STK push, uses M-Pesa PIN as a service Declaration public static CommandID CheckIdentity { get; } Property Value CommandID Check Identity Command CustomerPayBillOnline Used to simulate a transaction taking place in the case of C2B Simulate Transaction or to initiate a transaction on behalf of the customer (STK Push). Declaration public static CommandID CustomerPayBillOnline { get; } Property Value CommandID Customer PayBill Online Command. DisburseFundsToBusiness Transfer of funds from utility to MMF account Declaration public static CommandID DisburseFundsToBusiness { get; } Property Value CommandID Disburse Funds To Business Command PromotionPayment Used to send money when promotions take place e.g. raffle winners Declaration public static CommandID PromotionPayment { get; } Property Value CommandID Promotion Payment Command SalaryPayment Used to send money from an employer to employees e.g. salaries Declaration public static CommandID SalaryPayment { get; } Property Value CommandID Salary Payment Command TransactionReversal Reversal for an erroneous C2B transaction. Declaration public static CommandID TransactionReversal { get; } Property Value CommandID Transaction Reversal Command TransactionStatusQuery Used to query the details of a transaction Declaration public static CommandID TransactionStatusQuery { get; } Property Value CommandID Transaction Status Query Command Methods ToString() Returns a System.String that represents the current CommandID . Declaration public override string ToString() Returns System.String A System.String that represents the current CommandID . Overrides System.Object.ToString()"
  },
  "api/Safaricom.Mpesa.Helpers.IdentityParty.IdentifierType.html": {
    "href": "api/Safaricom.Mpesa.Helpers.IdentityParty.IdentifierType.html",
    "title": "Enum IdentityParty.IdentifierType | M-Pesa.Net",
    "keywords": "Enum IdentityParty.IdentifierType Identifier types as provided by Daraja Namespace : System.Dynamic.ExpandoObject Assembly : cs.temp.dll.dll Syntax public enum IdentifierType MSISDN SHORTCODE TILL"
  },
  "api/Safaricom.Mpesa.Responses.AuthResponse.html": {
    "href": "api/Safaricom.Mpesa.Responses.AuthResponse.html",
    "title": "Class AuthResponse | M-Pesa.Net",
    "keywords": "Class AuthResponse Inheritance System.Object AuthResponse Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : System.Dynamic.ExpandoObject Assembly : cs.temp.dll.dll Syntax public class AuthResponse Properties AccessToken Gets or sets the access token. Declaration public string AccessToken { get; set; } Property Value System.String The access token. Expiration Gets or sets the expiration time of token. Declaration public int Expiration { get; set; } Property Value System.Int32 The expiration time of token."
  },
  "api/Safaricom.Mpesa.Responses.TransactionStatusResponse.html": {
    "href": "api/Safaricom.Mpesa.Responses.TransactionStatusResponse.html",
    "title": "Class TransactionStatusResponse | M-Pesa.Net",
    "keywords": "Class TransactionStatusResponse Transaction status response. Inheritance System.Object TransactionStatusResponse Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : System.Dynamic.ExpandoObject Assembly : cs.temp.dll.dll Syntax public class TransactionStatusResponse Properties ResponseCode Gets or sets the response code. Declaration public int ResponseCode { get; set; } Property Value System.Int32 The response code."
  },
  "api/Safaricom.Mpesa.Responses.LNMQueryResponse.html": {
    "href": "api/Safaricom.Mpesa.Responses.LNMQueryResponse.html",
    "title": "Class LNMQueryResponse | M-Pesa.Net",
    "keywords": "Class LNMQueryResponse LNMQuery response. Inheritance System.Object LNMQueryResponse Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : System.Dynamic.ExpandoObject Assembly : cs.temp.dll.dll Syntax public class LNMQueryResponse Properties CheckoutRequestID Declaration public string CheckoutRequestID { get; set; } Property Value System.String MerchantRequestID Declaration public string MerchantRequestID { get; set; } Property Value System.String ResponseCode Declaration public string ResponseCode { get; set; } Property Value System.String ResponseDescription Declaration public string ResponseDescription { get; set; } Property Value System.String ResultCode Declaration public string ResultCode { get; set; } Property Value System.String ResultDesc Declaration public string ResultDesc { get; set; } Property Value System.String"
  },
  "api/Safaricom.Mpesa.Api.Env.html": {
    "href": "api/Safaricom.Mpesa.Api.Env.html",
    "title": "Class Api.Env | M-Pesa.Net",
    "keywords": "Class Api.Env Enum type class for available environments Inheritance System.Object Api.Env Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : System.Dynamic.ExpandoObject Assembly : cs.temp.dll.dll Syntax public class Env Properties Endpoint Declaration public string Endpoint { get; set; } Property Value System.String Production Declaration public static Api.Env Production { get; } Property Value Api.Env Sandbox Declaration public static Api.Env Sandbox { get; } Property Value Api.Env"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "API Documentation | M-Pesa.Net",
    "keywords": "API Documentation Before you checkout The API Documentation, these are several libraries that we have used: RestSharp : REST Interface with Daraja Bouncy Castkle Used for generation of SecurityCredential Xunit : Unit Testing Thats it! Get started reading through the API docs : See Also: Home Installation Getting Started Terminology"
  }
}